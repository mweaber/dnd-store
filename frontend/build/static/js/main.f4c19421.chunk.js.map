{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","fluid","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductsDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelievered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","isDelivered","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUsers","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"uLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAwB,wBAGxBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC/BnBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA4B,6BAE5BC,EAA0B,2BCL1BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAI3BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBChCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCO7BC,GAAUC,0BAAgB,CAC5BC,YCL8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKjF,EACD,MAAO,CAAEkF,SAAS,EAAMH,SAAU,IACtC,KAAK9E,EACD,MAAO,CACHiF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAE7B,KAAKnF,EACD,MAAO,CAAEgF,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDRfS,eCYiC,WAAmD,IAAlDT,EAAiD,uDAAzC,CAAEU,QAAS,CAAEC,QAAS,KAAQT,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAK9E,EACD,OAAO,aAAE+E,SAAS,GAASJ,GAC/B,KAAK1E,EACD,MAAO,CAAE8E,SAAS,EAAOM,QAASR,EAAOG,SAC7C,KAAK9E,EACD,MAAO,CAAE6E,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK7E,EACD,MAAO,CAAEkF,QAAS,CAAEC,QAAS,KACjC,QACI,OAAOX,IDtBfY,cC0BgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK1E,EACD,MAAO,CAAE2E,SAAS,GACtB,KAAK1E,EACD,MAAO,CAAE0E,SAAS,EAAOS,SAAS,GACtC,KAAKlF,EACD,MAAO,CAAEyE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDlCfc,cCsCgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKvE,EACD,MAAO,CAAEwE,SAAS,GACtB,KAAKvE,EACD,MAAO,CAAEuE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,KAAKvE,EACD,MAAO,CAAEsE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKtE,EACD,MAAO,GACX,QACI,OAAOiE,IDhDfe,cCoDgC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKnE,EACD,MAAO,CAAEoE,SAAS,GACtB,KAAKnE,EACD,MAAO,CAAEmE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,KAAKnE,EACD,MAAO,CAAEkE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKlE,EACD,MAAO,CAAEuE,QAAS,IACtB,QACI,OAAOV,ID9DfgB,oBCkEsC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAK/D,EACD,MAAO,CAAEgE,SAAS,GACtB,KAAK/D,EACD,MAAO,CAAE+D,SAAS,EAAOS,SAAS,GACtC,KAAKvE,EACD,MAAO,CAAE8D,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK9D,EACD,MAAO,GACX,QACI,OAAOyD,ID5EfiB,gBCgFkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAK3D,EACD,MAAO,CAAE4D,SAAS,EAAMH,SAAU,IACtC,KAAKxD,EACD,MAAO,CAAE2D,SAAS,EAAOH,SAAUC,EAAOG,SAC9C,KAAK3D,EACD,MAAO,CAAE0D,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDxFfkB,KEtCuB,WAA6D,IAA5DlB,EAA2D,uDAAnD,CAAEmB,UAAW,GAAIC,gBAAiB,IAAMlB,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAKxD,EACD,IAAM0E,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAE/D,OAAIY,EACO,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAAIA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAG1E,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAG5C,KAAKzE,EACD,OAAO,2BACAoD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEd,UAAYR,EAAOG,aAEpE,KAAKxD,EACD,OAAO,2BACAmD,GADP,IAEIoB,gBAAiBlB,EAAOG,UAEhC,KAAKvD,EACD,OAAO,2BACAkD,GADP,IAEI2B,cAAezB,EAAOG,UAE9B,QACI,OAAOL,IFKf4B,UGb4B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKpD,EACD,MAAO,CAAEqD,SAAS,GACtB,KAAKpD,EACD,MAAO,CAAEoD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKpD,EACD,MAAO,CAAEmD,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKnD,EACD,MAAO,GACX,QACI,OAAO8C,IHGf8B,aGC+B,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKhD,EACD,MAAO,CAAEiD,SAAS,GACtB,KAAKhD,EACD,MAAO,CAAEgD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKhD,EACD,MAAO,CAAE+C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHTf+B,YGa8B,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK7C,EACD,OAAO,2BAAK0C,GAAZ,IAAmBI,SAAS,IAChC,KAAK7C,EACD,MAAO,CAAE6C,SAAS,EAAO4B,KAAM9B,EAAOG,SAC1C,KAAK7C,EACD,MAAO,CAAE4C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK5C,EACD,MAAO,CAAEuE,KAAM,IACnB,QACI,OAAOhC,IHvBfiC,kBG2BoC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAKzC,EACD,MAAO,CAAE0C,SAAS,GACtB,KAAKzC,GACD,MAAO,CAAEyC,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC7D,KAAKzC,GACD,MAAO,CAAEwC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHnCfkC,SGuC2B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKtC,GACD,MAAO,CAAEuC,SAAS,GACtB,KAAKtC,GACD,MAAO,CAAEsC,SAAS,EAAO+B,MAAOjC,EAAOG,SAC3C,KAAKtC,GACD,MAAO,CAAEqC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKrC,GACD,MAAO,CAAEmE,MAAO,IACpB,QACI,OAAOnC,IHjDfoC,WGqD6B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKlC,GACD,MAAO,CAAEmC,SAAS,GACtB,KAAKlC,GACD,MAAO,CAAEkC,SAAS,EAAOS,SAAS,GACtC,KAAK1C,GACD,MAAO,CAAEiC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IH7DfqC,WGiE6B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAK/B,GACD,MAAO,CAAEgC,SAAS,GACtB,KAAK/B,GACD,MAAO,CAAE+B,SAAS,EAAOS,SAAS,GACtC,KAAKvC,GACD,MAAO,CAAE8B,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK9B,GACD,MAAO,CACHyD,KAAM,IAEd,QACI,OAAOhC,IH7EfsC,YIxB+B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAK3B,GACD,MAAO,CACH4B,SAAS,GAEjB,KAAK3B,GACD,MAAO,CACH2B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAEtB,KAAK3B,GACD,MAAO,CACH0B,SAAS,EAAOI,MAAON,EAAOG,SAEtC,QACI,OAAOL,IJQfwC,aIJgC,WAA6E,IAA5ExC,EAA2E,uDAAnE,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAAMlB,EAAW,uCAC5G,OAAQA,EAAOC,MACX,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAEjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACTmC,MAAOrC,EAAOG,SAEtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EAAOI,MAAON,EAAOG,SAEtC,QACI,OAAOL,IJZf0C,SIgB4B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAEjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAEjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EAAOI,MAAON,EAAOG,SAEtC,KAAKpB,GACD,MAAO,GACX,QACI,OAAOe,IJjCf2C,aIqCgC,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKV,GACH,MAAO,CACLW,SAAS,GAEb,KAAKV,GACH,MAAO,CACLU,SAAS,EACTS,SAAS,GAEb,KAAKlB,GACH,MAAO,CACLS,SAAS,EACTI,MAAON,EAAOG,SAElB,KAAKT,GACH,MAAO,GACT,QACE,OAAOI,IJvDX4C,YI2D+B,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCACnE,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAEjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EAAOI,MAAON,EAAOG,SAEtC,KAAKhB,GACD,MAAO,CAAEwD,OAAQ,IACrB,QACI,OAAO7C,IJ5Ef8C,UIgF6B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCACjE,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CACHc,SAAS,GAEjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKb,GACD,MAAO,CACHY,SAAS,EAAOI,MAAON,EAAOG,SAEtC,QACI,OAAOL,MJ7Fb+C,GAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAC3GG,GAAsBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAGxGI,GAAe,CACjBnC,KAAM,CAAEC,UAAW4B,GAAsB3B,gBAHX4B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAI9HrB,UAAW,CAAEC,SAAUuB,KAErBE,GAAa,CAACC,KAILC,GAFDC,sBAAY5D,GAASwD,GAAcK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,iIKT3EM,GAAS,kBAAM,SAACC,GACzBb,aAAac,WAAW,YACxBD,EAAS,CACL1D,KAAMjD,IAEV2G,EAAS,CACL1D,KAAM1C,IAEVoG,EAAS,CACL1D,KAAMd,KAEVwE,EAAS,CACL1D,KAAMnC,OAqCD+F,GAAiB,SAACC,GAAD,gDAAQ,WAAOH,EAAUI,GAAjB,wBAAAC,EAAA,sEAE9BL,EAAS,CACL1D,KAAM7C,IAHoB,EAMM2G,IAAfpC,EANS,EAMtBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXZ,SAePC,KAAMC,IAAN,qBACLR,GACdG,GAjB0B,gBAetBM,EAfsB,EAetBA,KAKRZ,EAAS,CACL1D,KAAM5C,EACN8C,QAASoE,IAtBiB,kDAyB9BZ,EAAS,CACL1D,KAAM3C,EACN6C,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3BnE,0DAAR,yD,2BC9EfC,GAzBG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACDC,mBAAS,IADR,oBACxBC,EADwB,KACfC,EADe,KAW/B,OACI,eAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEL,EAAQM,OACRR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAIcC,QAAM,EAArC,UACI,cAACN,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACLsF,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACrCC,YAAY,qBACZC,UAAU,oBAEd,cAACC,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,kBAAkBF,UAAU,MAA1D,wBCuCGG,GAtDA,WACX,IAAMpC,EAAWqC,cAETrE,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAMR,OACI,iCACI,cAACuE,GAAA,EAAD,CAAQC,GAAG,OAAOL,QAAQ,OAAOM,OAAO,KAAKC,kBAAgB,EAA7D,SACI,eAACC,GAAA,EAAD,WACI,cAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,cAACL,GAAA,EAAOM,MAAR,yBAEJ,cAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,eAACR,GAAA,EAAOS,SAAR,CAAiB7C,GAAG,mBAApB,UACI,cAAC,KAAD,CAAO8C,OAAQ,gBAAGjC,EAAH,EAAGA,QAAH,OAAiB,cAAC,GAAD,CAAWA,QAASA,OACpD,eAACkC,GAAA,EAAD,CAAKjB,UAAU,UAAf,UACI,cAAC,iBAAD,CAAeW,GAAG,QAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,WAAU,mBAAGlB,UAAU,yBAAvB,aAEHjE,EACG,eAACoF,GAAA,EAAD,CAAaC,MAAOrF,EAAS4D,KAAMzB,GAAG,WAAtC,UACI,cAAC,iBAAD,CAAeyC,GAAG,WAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,wBAEJ,cAACF,GAAA,EAAYE,KAAb,CAAkBC,QAvB5B,WAClBvD,EAASD,OAsBmB,uBAEJ,cAAC,iBAAD,CAAe6C,GAAG,SAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,WAAU,mBAAGlB,UAAU,gBAAvB,gBAEPjE,GAAYA,EAASwF,SAClB,eAACJ,GAAA,EAAD,CAAaC,MAAM,QAAQlD,GAAG,YAA9B,UACI,cAAC,iBAAD,CAAeyC,GAAG,iBAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,sBAEJ,cAAC,iBAAD,CAAeV,GAAG,oBAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,yBAEJ,cAAC,iBAAD,CAAeV,GAAG,kBAAlB,SACI,cAACQ,GAAA,EAAYE,KAAb,wC,mBCjCzBG,GAdA,WACX,OACI,iCACI,cAACd,GAAA,EAAD,UACI,cAACe,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK1B,UAAU,mBAAf,2C,UCNd2B,GAAS,SAAC,GAA4B,IAA1B7B,EAAyB,EAAzBA,MAAO8B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACI,sBAAK7B,UAAU,SAAf,UACI,+BACI,mBAAG8B,MAAO,CAAED,SAAS7B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,GAAM,uBAAyB,kBAEzG,+BACI,mBAAGgC,MAAO,CAAED,SAAS7B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEzG,+BACI,mBAAGgC,MAAO,CAAED,SAAS7B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEzG,+BACI,mBAAGgC,MAAO,CAAED,SAAS7B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAEzG,+BACI,mBAAGgC,MAAO,CAAED,SAAS7B,UAAWF,GAAS,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAGzG,+BAAO8B,GAAQA,QAK3BD,GAAOI,aAAe,CAClBF,MAAO,WAGIF,UCDAK,GAxBC,SAAC,GAAiB,IAAfpH,EAAc,EAAdA,QACf,OACI,eAACqH,GAAA,EAAD,CAAMjC,UAAU,oBAAhB,UACI,cAAC,QAAD,CAAMW,GAAE,mBAAc/F,EAAQsH,KAA9B,SACI,cAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKxH,EAAQyH,MAAOrC,UAAU,QAAQsC,OAAK,MAGzD,eAACL,GAAA,EAAKM,KAAN,WACI,cAAC,QAAD,CAAM5B,GAAE,mBAAc/F,EAAQsH,KAA9B,SACI,cAACD,GAAA,EAAKO,MAAN,CAAYC,GAAG,MAAf,SAAqB,iCAAS7H,EAAQ+E,WAG1C,cAACsC,GAAA,EAAKS,KAAN,CAAWD,GAAG,MAAd,SACI,cAAC,GAAD,CAAQ3C,MAAOlF,EAAQ+H,OAAQf,KAAI,UAAKhH,EAAQgI,WAAb,gBAGvC,eAACX,GAAA,EAAKS,KAAN,CAAWD,GAAG,KAAd,cACM7H,EAAQiI,gB,UCnBxBC,GAAU,SAAC,GAA2B,IAAzB5C,EAAwB,EAAxBA,QAAS6C,EAAe,EAAfA,SACxB,OACI,cAACC,GAAA,EAAD,CAAO9C,QAASA,EAAhB,SACK6C,KAKbD,GAAQf,aAAe,CACnB7B,QAAS,QAGE4C,U,UCJAG,GARA,WACX,OACI,cAACC,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAStB,MAAO,CAAEuB,MAAO,QAASC,OAAQ,QAASC,OAAQ,OAAQC,QAAS,SAA7G,SACI,sBAAMxD,UAAU,e,UCUbyD,GAZE,SAAC,GAAoD,IAAlDjJ,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApC8G,eAAoC,aAAnBtC,eAAmB,MAAT,GAAS,EACjE,OAAOzE,EAAQ,GACX,cAACkJ,GAAA,EAAD,UACK,YAAIC,MAAMnJ,GAAOoJ,QAAQjI,KAAI,SAAAD,GAAC,OAC3B,cAAC,iBAAD,CAA2BiF,GAAKY,EAAD,4BAAkG7F,EAAI,GAA3FuD,EAAO,kBAAcA,EAAd,iBAA8BvD,EAAI,GAAlC,gBAAiDA,EAAI,GAAtG,SACI,cAACgI,GAAA,EAAWrC,KAAZ,CAAiBwC,OAAQnI,EAAI,IAAMjB,EAAnC,SAA0CiB,EAAI,KAD9BA,EAAI,S,SCLlCoI,GAAO,SAAC,GAAqC,IAAnC1C,EAAkC,EAAlCA,MAAO2C,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAChC,OACI,eAACC,GAAA,EAAD,WACI,gCAAQ7C,IACR,sBAAMzB,KAAK,cAAcuE,QAASH,IAClC,sBAAMpE,KAAK,WAAWuE,QAASF,QAK3CF,GAAK/B,aAAe,CAChBX,MAAO,6BACP2C,YAAa,iDACbC,SAAU,wBAGCF,U,oBCQFK,GAAe,eAAClF,EAAD,uDAAW,GAAImF,EAAf,uDAA4B,GAA5B,gDAAmC,WAAOrG,GAAP,kBAAAK,EAAA,sEAEvDL,EAAS,CAAE1D,KAAMjF,IAFsC,SAIhCqJ,KAAMC,IAAN,gCAAmCO,EAAnC,uBAAyDmF,IAJzB,gBAI/CzF,EAJ+C,EAI/CA,KAERZ,EAAS,CACL1D,KAAMhF,EACNkF,QAASoE,IAR0C,gDAWvDZ,EAAS,CACL1D,KAAM/E,EACNiF,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAb1C,yDAAnC,uDAkBfwF,GAAsB,SAACnG,GAAD,gDAAQ,WAAOH,GAAP,kBAAAK,EAAA,sEAEnCL,EAAS,CAAE1D,KAAM9E,IAFkB,SAIZkJ,KAAMC,IAAN,wBAA2BR,IAJf,gBAI3BS,EAJ2B,EAI3BA,KAERZ,EAAS,CACL1D,KAAM7E,EACN+E,QAASoE,IARsB,gDAWnCZ,EAAS,CACL1D,KAAM5E,EACN8E,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAb9D,yDAAR,uDCLpByF,GAhCS,WACtB,IAAMvG,EAAWqC,cAEXjF,EAAkBkF,aAAY,SAACnG,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJAoK,qBAAU,WACRxG,ED0J2B,yCAAM,WAAOA,GAAP,kBAAAK,EAAA,sEAE7BL,EAAS,CAAE1D,KAAM3D,IAFY,SAIN+H,KAAMC,IAAN,qBAJM,gBAIrBC,EAJqB,EAIrBA,KAERZ,EAAS,CACL1D,KAAM1D,EACN4D,QAASoE,IARgB,gDAW7BZ,EAAS,CACL1D,KAAMzD,EACN2D,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAbpE,yDAAN,yDCzJ1B,CAACd,IAEGzD,EACL,cAAC,GAAD,IACEI,EACF,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IAE3B,cAAC8J,GAAA,EAAD,CAAUC,MAAM,QAAQzE,UAAU,UAAlC,SACG7F,EAASwB,KAAI,SAACf,GAAD,OACZ,cAAC4J,GAAA,EAASnD,KAAV,UACE,eAAC,QAAD,CAAMV,GAAE,mBAAc/F,EAAQsH,KAA9B,UACE,cAACwC,GAAA,EAAD,CAAOtC,IAAKxH,EAAQyH,MAAOsC,IAAK/J,EAAQ+E,KAAM2C,OAAK,IACnD,cAACkC,GAAA,EAASI,QAAV,CAAkB5E,UAAU,mBAA5B,SACE,+BACGpF,EAAQ+E,KADX,MACoB/E,EAAQiI,MAD5B,aAJcjI,EAAQsH,WC2BrB2C,GArCI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZ7F,EAAU6F,EAAMC,OAAO9F,QACvBmF,EAAaU,EAAMC,OAAOX,YAAc,EACxCrG,EAAWqC,cACXnG,EAAcoG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAMzC,OAJA8J,qBAAU,WACNxG,EAASoG,GAAalF,EAASmF,MAChC,CAACrG,EAAUkB,EAASmF,IAGnB,qCACI,cAAC,GAAD,IACEnF,EAAgC,cAAC,QAAD,CAAM0B,GAAG,IAAIX,UAAU,gBAAvB,qBAAtB,cAAC,GAAD,IACZ,iDACC1F,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IAEnB,qCACI,cAAC+G,GAAA,EAAD,UACKtH,EAASwB,KAAI,SAAAf,GAAO,OACjB,cAAC8G,GAAA,EAAD,CAAK1B,UAAU,6BAA+CgF,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAxF,SACI,cAAC,GAAD,CAASvK,QAASA,KAD2BA,EAAQsH,UAKjE,cAAC,GAAD,CAAU1H,MAAOA,EAAOC,KAAMA,EAAMwE,QAASA,GAAoB,Y,UCkJ9EmG,GAhLO,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,MAAO/F,EAAc,EAAdA,QAAc,EACpBC,mBAAS,GADW,oBACnCqG,EADmC,KAC9BC,EAD8B,OAEdtG,mBAAS,GAFK,oBAEnC2D,EAFmC,KAE3B4C,EAF2B,OAGZvG,mBAAS,IAHG,oBAGnCwG,EAHmC,KAG1BC,EAH0B,KAKpC1H,EAAWqC,cAEXzF,EAAiB0F,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFb,EAAsBmF,aAAY,SAAAnG,GAAK,OAAIA,EAAMgB,uBACtCwK,EAAoDxK,EAA7DH,QAAsC4K,EAAuBzK,EAA9BR,MAEvC6J,qBAAU,WACNxG,EAASsG,GAAoBS,EAAMC,OAAO7G,KACtCwH,IACAE,MAAM,oBACNL,EAAU,GACVE,EAAW,IACX1H,EAAS,CACL1D,KAAM5D,OAGf,CAACsH,EAAU+G,EAAOY,IAcrB,OACI,qCACI,cAAC,QAAD,CAAM1F,UAAU,qBAAqBW,GAAG,IAAxC,qBACCrG,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACvD,qCACI,cAAC,GAAD,CAAM0G,MAAOxG,EAAQ+E,OACrB,eAAC8B,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAGjF,UAAU,6BAAtB,SACI,cAAC0E,GAAA,EAAD,CAAOtC,IAAKxH,EAAQyH,MAAOsC,IAAK/J,EAAQ+E,KAAM2C,OAAK,MAEvD,cAACZ,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACY,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACI,cAAC2F,GAAA,EAAUxE,KAAX,UACI,6BAAKzG,EAAQ+E,SAEjB,cAACkG,GAAA,EAAUxE,KAAX,UACI,cAAC,GAAD,CAAQvB,MAAOlF,EAAQ+H,OAAQf,KAAI,UAAKhH,EAAQgI,WAAb,gBAEvC,eAACiD,GAAA,EAAUxE,KAAX,sBACazG,EAAQiI,SAErB,eAACgD,GAAA,EAAUxE,KAAX,2BACkBzG,EAAQmJ,oBAIlC,cAACrC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAChD,GAAA,EAAD,UACI,eAAC4D,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACI,cAAC2F,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UACI,uCAAU9G,EAAQiI,gBAK9B,cAACgD,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,UACK9G,EAAQkL,aAAe,EAAI,WAAa,sBAKpDlL,EAAQkL,aAAe,GAAM,cAACD,GAAA,EAAUxE,KAAX,UAC1B,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,UACI,cAACvC,GAAA,EAAKO,QAAN,CAAc+C,GAAG,SAAS3C,MAAOuF,EAAKzF,SAAU,SAACP,GAAD,OAAOiG,EAAOjG,EAAEQ,OAAOC,QAAvE,SACK,YAAI6D,MAAM/I,EAAQkL,cAAclC,QAAQjI,KAAI,SAACD,GAAD,OACzC,wBAAoBoE,MAAOpE,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eASrC,cAACmK,GAAA,EAAUxE,KAAX,UACI,cAACpB,GAAA,EAAD,CACIqB,QA5Ef,WACrBvC,EAAQS,KAAR,gBAAsBsF,EAAMC,OAAO7G,GAAnC,gBAA6CmH,KA4ETrF,UAAU,YACV3F,KAAK,SACL0L,SAAmC,IAAzBnL,EAAQkL,aAJtB,qCAapB,cAACrE,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,yCAC4B,IAA3BrK,EAAQC,QAAQmL,QAAgB,cAAC,GAAD,yBACjC,eAACH,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACKtF,EAAQC,QAAQc,KAAI,SAAAsK,GAAM,OACvB,cAACJ,GAAA,EAAUxE,KAAX,UACI,mCACK4E,EAAOtG,KACR,cAAC,GAAD,CAAQG,MAAOmG,EAAOtD,SACtB,4BAAIsD,EAAOC,UAAUC,UAAU,EAAG,MAClC,4BAAIF,EAAOT,cALES,EAAO/D,QAShC,eAAC2D,GAAA,EAAUxE,KAAX,WACI,yDACCsE,GAAsB,cAAC,GAAD,CAASzF,QAAQ,SAAjB,SAA2ByF,IACjD5J,EACG,eAACoD,GAAA,EAAD,CAAMC,SAvGpB,SAACC,GHgGQ,IAAC+G,EAAWH,EG/FvC5G,EAAEC,iBACFvB,GH8F4BqI,EG9FCtB,EAAMC,OAAO7G,GH8FH+H,EG9FO,CAC1CtD,SACA6C,WH4FuB,yCAAuB,WAAOzH,EAAUI,GAAjB,oBAAAC,EAAA,sEAElDL,EAAS,CACL1D,KAAM/D,IAHwC,EAMd6H,IAAfpC,EAN6B,EAM1CD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXQ,SAe5CC,KAAM4H,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQ5H,GAfb,OAiBlDN,EAAS,CAAE1D,KAAM9D,IAjBiC,gDAoBlDwH,EAAS,CACL1D,KAAM7D,EACN+D,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtB/C,yDAAvB,2DGOK,UACI,eAACM,GAAA,EAAKmH,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,qBACA,eAACrH,GAAA,EAAKO,QAAN,CACI+C,GAAG,SACH3C,MAAO6C,EACP/C,SAAU,SAACP,GAAD,OAAOkG,EAAUlG,EAAEQ,OAAOC,QAHxC,UAII,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,iCAGR,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,sBACA,cAACrH,GAAA,EAAKO,QAAN,CACI+C,GAAG,WACHgE,IAAI,IACJ3G,MAAO0F,EACP5F,SAAU,SAACP,GAAD,OAAOoG,EAAWpG,EAAEQ,OAAOC,aAG7C,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,uBAGA,eAAC,GAAD,qBAAgB,cAAC,QAAD,CAAMS,GAAG,SAAT,qBAAhB,qBACK,yBC9KpC+F,GAAY,SAACxI,EAAImH,GAAL,gDAAa,WAAOtH,EAAUI,GAAjB,kBAAAC,EAAA,sEACXK,KAAMC,IAAN,wBAA2BR,IADhB,gBAC1BS,EAD0B,EAC1BA,KAERZ,EAAS,CACL1D,KAAMxD,EACN0D,QAAS,CACLK,QAAS+D,EAAKuD,IACdvC,KAAMhB,EAAKgB,KACX0C,MAAO1D,EAAK0D,MACZQ,MAAOlE,EAAKkE,MACZiD,aAAcnH,EAAKmH,aACnBT,SAIRnI,aAAayJ,QAAQ,YAAavJ,KAAKwJ,UAAUzI,IAAW/C,KAAKC,YAf/B,2CAAb,yDC8GVwL,GA1GI,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,SAAU/H,EAAc,EAAdA,QAC/BqH,EAAYtB,EAAMC,OAAO7G,GAEzBmH,EAAMyB,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAEhElJ,EAAWqC,cAGT/E,EADKgF,aAAY,SAACnG,GAAD,OAAWA,EAAMkB,QAClCC,UAERkJ,qBAAU,WACJ6B,GACFrI,EAAS2I,GAAUN,EAAWf,MAE/B,CAACtH,EAAUqI,EAAWf,IAEzB,IAAM6B,EAAwB,SAAChJ,GAC7BH,EDH0B,SAACG,GAAD,OAAQ,SAACH,EAAUI,GAC7CJ,EAAS,CACL1D,KAAMvD,EACNyD,QAAS2D,IAGbhB,aAAayJ,QAAQ,YAAavJ,KAAKwJ,UAAUzI,IAAW/C,KAAKC,aCHxD8L,CAAejJ,KAO1B,OACE,eAACuD,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACE,+CACsB,IAArB5J,EAAU2K,OACT,eAAC,GAAD,iCACqB,cAAC,QAAD,CAAMrF,GAAG,IAAT,wBAGrB,cAACkF,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,SACG7E,EAAUM,KAAI,SAACJ,GAAD,OACb,cAACsK,GAAA,EAAUxE,KAAX,UACE,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAACP,GAAA,EAAD,CAAOtC,IAAK7G,EAAK8G,MAAOsC,IAAKpJ,EAAKoE,KAAM2C,OAAK,EAAC8E,SAAO,MAEvD,cAAC1F,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAAC,QAAD,CAAMtE,GAAE,mBAAcpF,EAAKX,SAA3B,SAAuCW,EAAKoE,SAE9C,eAAC+B,GAAA,EAAD,CAAKuD,GAAI,EAAT,cAAc1J,EAAKsH,SACnB,cAACnB,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAAC9F,GAAA,EAAKO,QAAN,CACE+C,GAAG,SACH3C,MAAOvE,EAAK8J,IACZzF,SAAU,SAACP,GAAD,OACRtB,EACE2I,GAAUnL,EAAKX,QAASoM,OAAO3H,EAAEQ,OAAOC,UAL9C,SASG,YAAI6D,MAAMpI,EAAKuK,cAAclC,QAAQjI,KAAI,SAACD,GAAD,OACxC,wBAAoBoE,MAAOpE,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,UAMvB,cAACgG,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAAChF,GAAA,EAAD,CACE5F,KAAK,SACL6F,QAAQ,QACRoB,QAAS,kBAAM4F,EAAsB3L,EAAKX,UAH5C,SAKE,mBAAGoF,UAAU,yBAhCAzE,EAAKX,iBAyClC,cAAC8G,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAAChD,GAAA,EAAD,UACE,eAAC4D,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACE,eAAC2F,GAAA,EAAUxE,KAAX,WACE,4CACahG,EAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK8J,MAAK,GAD7D,aADF,IAMGhK,EACEgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK8J,IAAM9J,EAAKsH,QAAO,GACnD0E,QAAQ,MAEb,cAAC1B,GAAA,EAAUxE,KAAX,UACE,cAACpB,GAAA,EAAD,CACE5F,KAAK,SACL2F,UAAU,YACV+F,SAA+B,IAArB1K,EAAU2K,OACpB1E,QA1EU,WACtBvC,EAAQS,KAAK,6BAqEH,8CClFCgI,GAZO,SAAC,GAAkB,IAAhBzE,EAAe,EAAfA,SACrB,OACI,cAACrC,GAAA,EAAD,UACI,cAACe,GAAA,EAAD,CAAKzB,UAAU,4BAAf,SACI,cAAC0B,GAAA,EAAD,CAAK+F,GAAI,GAAIxC,GAAI,EAAjB,SACKlC,SC4DN2E,GA3DK,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAU/H,EAAc,EAAdA,QAAc,EACjBC,mBAAS,IADQ,oBACpC2I,EADoC,KAC7BC,EAD6B,OAEX5I,mBAAS,IAFE,oBAEpC6I,EAFoC,KAE1BC,EAF0B,KAIrC/J,EAAWqC,cAEXtE,EAAYuE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aAErCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBgM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnE1C,qBAAU,WACFxI,GACAgD,EAAQS,KAAKuI,KAElB,CAAChJ,EAAShD,EAAUgM,IAMvB,OACI,eAAC,GAAD,WACI,yCACCrN,GAAS,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC6E,GAAA,EAAD,CAAMC,SATQ,SAACC,GACnBA,EAAEC,iBACFvB,EjBAa,SAAC4J,EAAOE,GAAR,gDAAqB,WAAO9J,GAAP,oBAAAK,EAAA,sEAElCL,EAAS,CACL1D,KAAMpD,IAGJoH,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAM4H,KAAK,mBAAoB,CAAEsB,QAAOE,YAAYxJ,GAZzC,gBAY1BM,EAZ0B,EAY1BA,KAERZ,EAAS,CACL1D,KAAMnD,EACNqD,QAASoE,IAGbzB,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAUjI,IAnBd,kDAqBlCZ,EAAS,CACL1D,KAAMlD,EACNoD,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAvB/D,0DAArB,sDiBAJmJ,CAAML,EAAOE,KAOlB,UACI,eAAC1I,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,4BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,QACL0F,YAAY,cACZD,MAAO6H,EACP/H,SAAU,SAACP,GAAD,OAAOuI,EAASvI,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,uBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,WACL0F,YAAY,iBACZD,MAAO+H,EACPjI,SAAU,SAACP,GAAD,OAAOyI,EAAYzI,EAAEQ,OAAOC,aAG9C,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,wBAGJ,cAACuB,GAAA,EAAD,CAAKzB,UAAU,OAAf,SACI,eAAC0B,GAAA,EAAD,4BACkB,cAAC,QAAD,CAAMf,GAAIoH,EAAQ,6BAAyBA,GAAa,YAAxD,+BCwCnBE,GA5FQ,SAAC,GAA2B,IAAzBnB,EAAwB,EAAxBA,SAAU/H,EAAc,EAAdA,QAAc,EACtBC,mBAAS,IADa,oBACvCW,EADuC,KACjCuI,EADiC,OAEpBlJ,mBAAS,IAFW,oBAEvC2I,EAFuC,KAEhCC,EAFgC,OAGd5I,mBAAS,IAHK,oBAGvC6I,EAHuC,KAG7BC,EAH6B,OAIA9I,mBAAS,IAJT,oBAIvCmJ,EAJuC,KAItBC,EAJsB,OAKhBpJ,mBAAS,MALO,oBAKvCH,EALuC,KAK9BwJ,EAL8B,KAOxCtK,EAAWqC,cAEXpE,EAAeqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM8B,gBAExC1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBgM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnE1C,qBAAU,WACFxI,GACAgD,EAAQS,KAAKuI,KAElB,CAAChJ,EAAShD,EAAUgM,IAavB,OACI,eAAC,GAAD,WACI,yCACClJ,GAAW,cAAC,GAAD,CAASqB,QAAQ,SAAjB,SAA2BrB,IACtCnE,GAAS,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC6E,GAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBACEuI,IAAaM,EACbE,EAAW,0BAGXtK,ElBqCY,SAAC4B,EAAMgI,EAAOE,GAAd,gDAA2B,WAAO9J,GAAP,oBAAAK,EAAA,sEAE3CL,EAAS,CACL1D,KAAMhD,IAGJgH,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAM4H,KAAK,aAAc,CAAE1G,OAAMgI,QAAOE,YAAYxJ,GAZhC,gBAYnCM,EAZmC,EAYnCA,KAERZ,EAAS,CACL1D,KAAM/C,EACNiD,QAASoE,IAGbZ,EAAS,CACL1D,KAAMnD,EACNqD,QAASoE,IAGbzB,aAAayJ,QAAQ,WAAYvJ,KAAKwJ,UAAUjI,IAxBL,kDA0B3CZ,EAAS,CACL1D,KAAM9C,EACNgD,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA5BtD,0DAA3B,sDkBrCHyJ,CAAS3I,EAAMgI,EAAOE,KAW/B,UAEI,eAAC1I,GAAA,EAAKmH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,mBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6I,EAAQ7I,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,4BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,QACL0F,YAAY,cACZD,MAAO6H,EACP/H,SAAU,SAACP,GAAD,OAAOuI,EAASvI,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,uBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,WACL0F,YAAY,iBACZD,MAAO+H,EACPjI,SAAU,SAACP,GAAD,OAAOyI,EAAYzI,EAAEQ,OAAOC,aAI9C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,+BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,WACL0F,YAAY,mBACZD,MAAOqI,EACPvI,SAAU,SAACP,GAAD,OAAO+I,EAAmB/I,EAAEQ,OAAOC,aAIrD,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,yBAGJ,cAACuB,GAAA,EAAD,CAAKzB,UAAU,OAAf,SACI,eAAC0B,GAAA,EAAD,+BACqB,cAAC,QAAD,CAAMf,GAAIoH,EAAQ,0BAAsBA,GAAa,SAArD,8B,UC8DtBQ,GAlJO,SAAC,GAA0B,EAAxBzB,SAAyB,IAAf/H,EAAc,EAAdA,QAAc,EACrBC,mBAAS,IADY,oBACtCW,EADsC,KAChCuI,EADgC,OAEnBlJ,mBAAS,IAFU,oBAEtC2I,EAFsC,KAE/BC,EAF+B,OAGb5I,mBAAS,IAHI,oBAGtC6I,EAHsC,KAG5BC,EAH4B,OAIC9I,mBAAS,IAJV,oBAItCmJ,EAJsC,KAIrBC,EAJqB,OAKfpJ,mBAAS,MALM,oBAKtCH,EALsC,KAK7BwJ,EAL6B,KAOvCtK,EAAWqC,cAEXnE,EAAcoE,aAAY,SAAAnG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAGAhB,EADkBsF,aAAY,SAAAnG,GAAK,OAAIA,EAAMiC,qBAC7CpB,QAEF+B,EAAcuD,aAAY,SAAAnG,GAAK,OAAIA,EAAM4C,eAC9B0L,EAA8C1L,EAAvDxC,QAA+BmO,EAAwB3L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpDwH,qBAAU,WACDxI,EAGIG,EAAKyD,MAINuI,EAAQhM,EAAKyD,MACbiI,EAAS1L,EAAKyL,SAJd5J,EAASE,GAAe,YACxBF,EC6HY,yCAAM,WAAOA,EAAUI,GAAjB,wBAAAC,EAAA,sEAE1BL,EAAS,CACL1D,KAAMjB,KAHgB,EAMU+E,IAAfpC,EANK,EAMlBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVhB,SAcHC,KAAMC,IAAN,uBAEnBL,GAhBsB,gBAclBM,EAdkB,EAclBA,KAKRZ,EAAS,CACL1D,KAAMhB,GACNkB,QAASoE,IArBa,kDAwB1BZ,EAAS,CACL1D,KAAMf,GACNiB,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1BvE,0DAAN,0DDjIhBE,EAAQS,KAAK,YAUlB,CAACT,EAAShD,EAAUgC,EAAU7B,EAAMnB,IAmBvC,OACI,eAAC0G,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,8CACCpG,GAAW,cAAC,GAAD,CAASqB,QAAQ,SAAjB,SAA2BrB,IACtCnE,GAAS,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACpCK,GAAW,cAAC,GAAD,CAASmF,QAAQ,UAAjB,6BACX5F,GAAW,cAAC,GAAD,IACZ,eAAC6E,GAAA,EAAD,CAAMC,SAzBI,SAACC,GACnBA,EAAEC,iBACEuI,IAAaM,EACbE,EAAW,0BAGXtK,EnBuFqB,SAAC7B,GAAD,gDAAU,WAAO6B,EAAUI,GAAjB,wBAAAC,EAAA,sEAEnCL,EAAS,CACL1D,KAAMzC,IAHyB,EAMCuG,IAAfpC,EANc,EAM3BD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXP,SAeZC,KAAMiK,IAAN,qBAEnBxM,EACAmC,GAlB+B,gBAe3BM,EAf2B,EAe3BA,KAMRZ,EAAS,CACL1D,KAAMxC,GACN0C,QAASoE,IAvBsB,kDA0BnCZ,EAAS,CACL1D,KAAMvC,GACNyC,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA5B9D,0DAAV,wDmBvFZ8J,CAAkB,CACvBzK,GAAIhC,EAAKgG,IACTvC,OACAgI,QACAE,eAeA,UAEI,eAAC1I,GAAA,EAAKmH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,mBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6I,EAAQ7I,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,4BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,QACL0F,YAAY,cACZD,MAAO6H,EACP/H,SAAU,SAACP,GAAD,OAAOuI,EAASvI,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,uBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,WACL0F,YAAY,iBACZD,MAAO+H,EACPjI,SAAU,SAACP,GAAD,OAAOyI,EAAYzI,EAAEQ,OAAOC,aAI9C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,+BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,WACL0F,YAAY,mBACZD,MAAOqI,EACPvI,SAAU,SAACP,GAAD,OAAO+I,EAAmB/I,EAAEQ,OAAOC,aAIrD,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,0BAGR,eAACwB,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACI,2CACCuD,EAAgB,cAAC,GAAD,IAAaC,EAAc,cAAC,GAAD,CAASvI,QAAQ,SAAjB,SAA2BuI,IACnE,eAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,sCACA,4CACA,4BAGR,gCACKjD,EAAOpB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAMyF,MACX,6BAAKzF,EAAMyJ,UAAUC,UAAU,EAAG,MAClC,6BAAK1J,EAAMwM,aACX,6BAAKxM,EAAMyM,OAASzM,EAAM0M,OAAOhD,UAAU,EAAG,IAC1C,mBAAGnG,UAAU,eAAe8B,MAAO,CAAED,MAAO,WAEhD,6BAAKpF,EAAM2M,aAAe3M,EAAM4M,YAAYlD,UAAU,EAAG,IACrD,mBAAGnG,UAAU,eAAe8B,MAAO,CAAED,MAAO,WAEhD,6BACI,cAAC,iBAAD,CAAelB,GAAE,iBAAYlE,EAAMyF,KAAnC,SACI,cAACjC,GAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,QAAnC,2BAZHzD,EAAMyF,oBE5FhCoH,GAnCO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1C,OACI,eAACzI,GAAA,EAAD,CAAKjB,UAAU,8BAAf,UACI,cAACiB,GAAA,EAAII,KAAL,UACKkI,EACG,cAAC,iBAAD,CAAe5I,GAAG,SAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,wBAEJ,cAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,uBAER,cAAC9E,GAAA,EAAII,KAAL,UACKmI,EACG,cAAC,iBAAD,CAAe7I,GAAG,YAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,yBAEJ,cAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,wBAER,cAAC9E,GAAA,EAAII,KAAL,UACKoI,EACG,cAAC,iBAAD,CAAe9I,GAAG,WAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,wBAEJ,cAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,uBAER,cAAC9E,GAAA,EAAII,KAAL,UACKqI,EACG,cAAC,iBAAD,CAAe/I,GAAG,cAAlB,SACI,cAACM,GAAA,EAAIC,KAAL,4BAEJ,cAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,+BC8CL4D,GAxEQ,SAAC,GAAiB,IAAf5K,EAAc,EAAdA,QAEdzD,EADK+E,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCE,gBAF4B,EAIN0D,mBAAS1D,EAAgBsO,SAJnB,oBAI7BA,EAJ6B,KAIpBC,EAJoB,OAKZ7K,mBAAS1D,EAAgBwO,MALb,oBAK7BA,EAL6B,KAKvBC,EALuB,OAMA/K,mBAAS1D,EAAgB0O,YANzB,oBAM7BA,EAN6B,KAMjBC,EANiB,OAONjL,mBAAS1D,EAAgB4O,SAPnB,oBAO7BA,EAP6B,KAOpBC,EAPoB,KAS9BpM,EAAWqC,cAOjB,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAemJ,OAAK,EAACC,OAAK,IAC1B,0CACA,eAACrK,GAAA,EAAD,CAAMC,SATQ,SAACC,GRYQ,IAACV,EQX5BU,EAAEC,iBACFvB,GRU4BY,EQVC,CAAEiL,UAASE,OAAME,aAAYE,WRUrB,SAACnM,GAC1CA,EAAS,CACL1D,KAAMtD,EACNwD,QAASoE,IAGbzB,aAAayJ,QAAQ,kBAAmBvJ,KAAKwJ,UAAUjI,OQfnDI,EAAQS,KAAK,aAMT,UAEI,eAACL,GAAA,EAAKmH,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,sBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,gBACZD,MAAO8J,EACPQ,UAAQ,EACRxK,SAAU,SAACP,GAAD,OAAOwK,EAAWxK,EAAEQ,OAAOC,aAI7C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,mBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,aACZD,MAAOgK,EACPM,UAAQ,EACRxK,SAAU,SAACP,GAAD,OAAO0K,EAAQ1K,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,0BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,oBACZD,MAAOkK,EACPI,UAAQ,EACRxK,SAAU,SAACP,GAAD,OAAO4K,EAAc5K,EAAEQ,OAAOC,aAIhD,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,sBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,gBACZD,MAAOoK,EACPE,UAAQ,EACRxK,SAAU,SAACP,GAAD,OAAO8K,EAAW9K,EAAEQ,OAAOC,aAI7C,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,6BC5BDmK,GAtCO,SAAC,GAAiB,IAAftL,EAAc,EAAdA,QACRsB,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCE,iBAGJyD,EAAQS,KAAK,aALkB,MAQOR,mBAAS,UARhB,oBAQ5BnD,EAR4B,KAQbyO,EARa,KAU7BvM,EAAWqC,cAOjB,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAemJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gDACA,eAACtK,GAAA,EAAD,CAAMC,SATQ,SAACC,GToBM,IAACV,ESnB1BU,EAAEC,iBACFvB,GTkB0BY,ESlBC9C,ETkBQ,SAACkC,GACxCA,EAAS,CACL1D,KAAMrD,EACNuD,QAASoE,IAGbzB,aAAayJ,QAAQ,gBAAiBvJ,KAAKwJ,UAAUjI,OSvBjDI,EAAQS,KAAK,gBAMT,UACI,eAACL,GAAA,EAAKmH,MAAN,WACI,cAACnH,GAAA,EAAKqH,MAAN,CAAY/D,GAAG,SAAf,2BAGA,cAACf,GAAA,EAAD,UACI,cAACvC,GAAA,EAAKoL,MAAN,CAAYlQ,KAAK,QAAQmQ,MAAM,wBAAwBtM,GAAG,SAASyB,KAAK,gBAAgBG,MAAM,SAAS2K,SAAO,EAAC7K,SAAU,SAACP,GAAD,OAAOiL,EAAiBjL,EAAEQ,OAAOC,eAKlK,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,6BC4HDwK,GA3JU,SAAC,GAAiB,IAAf3L,EAAc,EAAdA,QAClB3D,EAAOiF,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAClC2C,EAAWqC,cAGXuK,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAIjDnM,EAAK2P,WAAaJ,EAAYvP,EAAKC,UAAUgM,QACzC,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAKsH,MAAQtH,EAAK8J,MACvC,IAGJjK,EAAK4P,cAAgBL,EAAYvP,EAAK2P,WAAa,IAAM,EAAI,KAC7D3P,EAAK6P,SAAWN,EAAY3D,QAAQ,IAAO5L,EAAK2P,YAAYxD,QAAQ,KACpEnM,EAAK6N,YACDjC,OAAO5L,EAAK2P,YACZ/D,OAAO5L,EAAK4P,eACZhE,OAAO5L,EAAK6P,WACd1D,QAAQ,GAEV,IAAM/K,EAAc6D,aAAY,SAAAnG,GAAK,OAAIA,EAAMsC,eACvCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExB6J,qBAAU,WACFxJ,GACAgE,EAAQS,KAAR,kBAAwB/C,EAAMyF,QAGnC,CAACnD,EAAShE,IAcb,OACI,qCACI,cAAC,GAAD,CAAewO,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,eAACjI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,eAACY,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACI,eAAC2F,GAAA,EAAUxE,KAAX,WACI,0CACA,8BACI,+CACCjG,EAAKE,gBAAgBsO,QAF1B,KAEqCxO,EAAKE,gBAAgBwO,KAAM,IAC3D1O,EAAKE,gBAAgB0O,WAH1B,IAGuC,IAClC5O,EAAKE,gBAAgB4O,cAI9B,eAACrE,GAAA,EAAUxE,KAAX,WACI,gDACA,8CACCjG,EAAKS,iBAGV,eAACgK,GAAA,EAAUxE,KAAX,WACI,+CAC2B,IAA1BjG,EAAKC,UAAU2K,OAAe,cAAC,GAAD,iCAC3B,cAACH,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,SACK9E,EAAKC,UAAUM,KAAI,SAACJ,EAAM2P,GAAP,OAChB,cAACrF,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAACP,GAAA,EAAD,CAAOtC,IAAK7G,EAAK8G,MAAOsC,IAAKpJ,EAAKoE,KAAM2C,OAAK,EAAC8E,SAAO,MAEzD,cAAC1F,GAAA,EAAD,UACI,cAAC,QAAD,CAAMf,GAAE,mBAAcpF,EAAKX,SAA3B,SACKW,EAAKoE,SAGd,eAAC+B,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACK1J,EAAK8J,IADV,OACmB9J,EAAKsH,MADxB,OACmCtH,EAAK8J,IAAM9J,EAAKsH,aAXtCqI,gBAqB7C,cAACxJ,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACI,cAAChD,GAAA,EAAD,UACI,eAAC4D,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACI,cAAC2F,GAAA,EAAUxE,KAAX,UACI,iDAGJ,cAACwE,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,oBAGA,eAACA,GAAA,EAAD,eACMtG,EAAK2P,mBAInB,cAAClF,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,uBAGA,eAACA,GAAA,EAAD,eACMtG,EAAK4P,sBAInB,cAACnF,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,kBAGA,eAACA,GAAA,EAAD,eACMtG,EAAK6P,iBAInB,cAACpF,GAAA,EAAUxE,KAAX,UACI,eAACI,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,oBAGA,eAACA,GAAA,EAAD,eACMtG,EAAK6N,mBAGnB,cAACpD,GAAA,EAAUxE,KAAX,UACK3G,GAAS,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,MAEzC,cAACmL,GAAA,EAAUxE,KAAX,UACI,cAACpB,GAAA,EAAD,CAAQ5F,KAAK,SAAS2F,UAAU,YAAY+F,SAA6B,IAAnB3K,EAAKC,UAAiBiG,QA9G9E,WACtBvD,EJnBmB,SAACtB,GAAD,gDAAW,WAAOsB,EAAUI,GAAjB,wBAAAC,EAAA,sEAE9BL,EAAS,CACL1D,KAAM3B,KAHoB,EAMMyF,IAAfpC,EANS,EAMtBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXZ,SAePC,KAAM4H,KAAN,cAEnB5J,EACA4B,GAlB0B,gBAetBM,EAfsB,EAetBA,KAMRZ,EAAS,CACL1D,KAAM1B,GACN4B,QAASoE,IAvBiB,kDA0B9BZ,EAAS,CACL1D,KAAMzB,GACN2B,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA5BnE,0DAAX,wDImBVsM,CAAY,CACjBxO,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBkP,WAAY3P,EAAK2P,WACjBC,cAAe5P,EAAK4P,cACpBC,SAAU7P,EAAK6P,SACfhC,WAAY7N,EAAK6N,eAsGG,yC,SCkFjBmC,GAvNK,SAAC,GAAwB,IAqBpBR,EArBF9F,EAAqB,EAArBA,MAAO/F,EAAc,EAAdA,QACtBsM,EAAUvG,EAAMC,OAAO7G,GADa,EAGVc,oBAAS,GAHC,oBAGnCsM,EAHmC,KAGzBC,EAHyB,KAKpCxN,EAAWqC,cAEX1D,EAAe2D,aAAY,SAACnG,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAElBkC,EAAWyD,aAAY,SAACnG,GAAD,OAAWA,EAAM0C,YAC7B4O,EAAoC5O,EAA7CtC,QAA8BmR,EAAe7O,EAAxB7B,QAEvB8B,EAAewD,aAAY,SAACnG,GAAD,OAAWA,EAAM2C,gBACjC6O,EAA4C7O,EAArDvC,QAAkCqR,EAAmB9O,EAA5B9B,QAGzBgB,EADUsE,aAAY,SAACnG,GAAD,OAAWA,EAAM4B,aACvCC,SAER,IAAKzB,EAAS,CAMZmC,EAAMsO,YAJeH,EAKnBnO,EAAME,WAAW0K,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAKsH,MAAQtH,EAAK8J,MAAK,IAJ5DwF,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAQjDhD,qBAAU,WACHxI,GACHgD,EAAQS,KAAK,UAGf,ILG4BtB,EKHtB0N,EAAe,yCAAG,iCAAAxN,EAAA,sEACWK,KAAMC,IAAI,sBADrB,gBACRmN,EADQ,EACdlN,MACFmN,EAASC,SAASC,cAAc,WAC/B3R,KAAO,kBACdyR,EAAO1J,IAAP,kDAAwDyJ,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdX,GAAY,IAEdQ,SAASI,KAAKC,YAAYN,GATJ,4CAAH,sDAYhBrP,GAASgP,GAAcE,GAAkBlP,EAAMyF,MAAQmJ,GAC1DtN,EAAS,CAAE1D,KAAMlB,KACjB4E,EAAS,CAAE1D,KAAMP,KACjBiE,GLZ0BG,EKYDmN,ELZA,yCAAQ,WAAOtN,EAAUI,GAAjB,wBAAAC,EAAA,sEAE/BL,EAAS,CACL1D,KAAMxB,KAHqB,EAMKsF,IAAfpC,EANU,EAMvBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVX,SAcRC,KAAMC,IAAN,sBACJR,GACfG,GAhB2B,gBAcvBM,EAduB,EAcvBA,KAKRZ,EAAS,CACL1D,KAAMvB,GACNyB,QAASoE,IArBkB,kDAwB/BZ,EAAS,CACL1D,KAAMtB,GACNwB,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1BlE,0DAAR,2DKafpC,EAAMyM,SACXmD,OAAOC,OAGVf,GAAY,GAFZK,OAKH,CAAC7N,EAAUsN,EAASI,EAAYE,EAAgBlP,EAAOsC,EAAShD,IAWnE,OAAOzB,EACL,cAAC,GAAD,IACEI,EACF,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IAE3B,qCACE,wCAAW+B,EAAMyF,OACjB,eAACT,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,eAACY,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACE,eAAC2F,GAAA,EAAUxE,KAAX,WACE,0CACA,8BACE,4CADF,IAC2B5E,EAAMP,KAAKyD,QAEtC,8BACE,6CAAyB,IACzB,mBAAG4M,KAAI,iBAAY9P,EAAMP,KAAKyL,OAA9B,SAAwClL,EAAMP,KAAKyL,WAErD,8BACE,8CACClL,EAAMnB,gBAAgBsO,QAFzB,KAEoCnN,EAAMnB,gBAAgBwO,KAAM,IAC7DrN,EAAMnB,gBAAgB0O,WAHzB,IAGsC,IACnCvN,EAAMnB,gBAAgB4O,WAExBzN,EAAM+P,YACL,eAAC,GAAD,CAAStM,QAAQ,UAAjB,0BACgBzD,EAAM4M,eAGtB,cAAC,GAAD,CAASnJ,QAAQ,SAAjB,8BAIJ,eAAC2F,GAAA,EAAUxE,KAAX,WACE,gDACA,8BACE,8CACC5E,EAAMZ,iBAERY,EAAMyM,OACL,eAAC,GAAD,CAAShJ,QAAQ,UAAjB,qBAAoCzD,EAAM0M,UAE1C,cAAC,GAAD,CAASjJ,QAAQ,SAAjB,yBAIJ,eAAC2F,GAAA,EAAUxE,KAAX,WACE,6CAC6B,IAA5B5E,EAAME,WAAWqJ,OAChB,cAAC,GAAD,6BAEA,cAACH,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,SACGzD,EAAME,WAAWhB,KAAI,SAACJ,EAAM2P,GAAP,OACpB,cAACrF,GAAA,EAAUxE,KAAX,UACE,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAACP,GAAA,EAAD,CACEtC,IAAK7G,EAAK8G,MACVsC,IAAKpJ,EAAKoE,KACV2C,OAAK,EACL8E,SAAO,MAGX,cAAC1F,GAAA,EAAD,UACE,cAAC,QAAD,CAAMf,GAAE,mBAAcpF,EAAKX,SAA3B,SACGW,EAAKoE,SAGV,eAAC+B,GAAA,EAAD,CAAKuD,GAAI,EAAT,UACG1J,EAAK8J,IADR,OACiB9J,EAAKsH,MADtB,OACiCtH,EAAK8J,IAAM9J,EAAKsH,aAhBhCqI,gBA0BjC,cAACxJ,GAAA,EAAD,CAAKuD,GAAI,EAAT,SACE,cAAChD,GAAA,EAAD,UACE,eAAC4D,GAAA,EAAD,CAAW3F,QAAQ,QAAnB,UACE,cAAC2F,GAAA,EAAUxE,KAAX,UACE,iDAEF,cAACwE,GAAA,EAAUxE,KAAX,UACE,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,eAAOjF,EAAMsO,mBAGjB,cAAClF,GAAA,EAAUxE,KAAX,UACE,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,uBACA,eAACA,GAAA,EAAD,eAAOjF,EAAMuO,sBAGjB,cAACnF,GAAA,EAAUxE,KAAX,UACE,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,eAAOjF,EAAMwO,iBAGjB,cAACpF,GAAA,EAAUxE,KAAX,UACE,eAACI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,eAAOjF,EAAMwM,oBAGfxM,EAAMyM,QACN,eAACrD,GAAA,EAAUxE,KAAX,WACGmK,GAAc,cAAC,GAAD,IACbF,EAGA,cAAC,gBAAD,CACEmB,OAAQhQ,EAAMwM,WACdyD,UA/HU,SAACC,GAC7BC,QAAQC,IAAIF,GACZ5O,ELOoB,SAACsN,EAASsB,GAAV,gDAA4B,WAAO5O,EAAUI,GAAjB,wBAAAC,EAAA,sEAE5CL,EAAS,CACL1D,KAAMrB,KAHkC,EAMRmF,IAAfpC,EANuB,EAMpCD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXE,SAerBC,KAAMiK,IAAN,sBACJ2C,EADI,QAEnBsB,EACAtO,GAlBwC,gBAepCM,EAfoC,EAepCA,KAMRZ,EAAS,CACL1D,KAAMpB,GACNsB,QAASoE,IAvB+B,kDA0B5CZ,EAAS,CACL1D,KAAMnB,GACNqB,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA5BrD,0DAA5B,wDKPXiO,CAASzB,EAASsB,OAyHX,cAAC,GAAD,OASLjB,GAAkB,cAAC,GAAD,IAClB3P,GACCA,EAASwF,SACT9E,EAAMyM,SACLzM,EAAM+P,aACL,cAAC3G,GAAA,EAAUxE,KAAX,UACE,cAACpB,GAAA,EAAD,CACE5F,KAAK,SACL2F,UAAU,gBACVsB,QAxIG,WACrBvD,ELoCwB,SAACtB,GAAD,gDAAW,WAAOsB,EAAUI,GAAjB,0BAAAC,EAAA,sEAEjCL,EAAS,CACP1D,KAAMV,KAHyB,EAQ7BwE,IADWpC,EAPkB,EAO/BD,UAAaC,SAGTsC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYxC,EAASyC,SAZL,SAgBVC,KAAMiK,IAAN,sBACNjM,EAAMyF,IADA,YAErB,GACA7D,GAnB+B,gBAgBzBM,EAhByB,EAgBzBA,KAMRZ,EAAS,CACP1D,KAAMT,GACNW,QAASoE,IAxBsB,kDA+BjB,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVd,EAASD,MAEXC,EAAS,CACP1D,KAAMR,GACNU,QAASsE,IApCsB,0DAAX,wDKpCfkO,CAAatQ,KAoIN,+CC3ILuQ,GArES,SAAC,GAAiB,IAAfjO,EAAc,EAAdA,QACjBhB,EAAWqC,cAEXpD,EAAYqD,aAAY,SAAAnG,GAAK,OAAIA,EAAM8C,aACrC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAWR,OATAwI,qBAAU,WACFxI,GAAYA,EAASwF,QACrBxD,EN8Kc,yCAAM,WAAOA,EAAUI,GAAjB,wBAAAC,EAAA,sEAExBL,EAAS,CACL1D,KAAMb,KAHc,EAMY2E,IAAfpC,EANG,EAMhBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVlB,SAcDC,KAAMC,IAAN,cAEnBL,GAhBoB,gBAchBM,EAdgB,EAchBA,KAKRZ,EAAS,CACL1D,KAAMZ,GACNc,QAASoE,IArBW,kDAwBxBZ,EAAS,CACL1D,KAAMX,GACNa,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1BzE,0DAAN,yDM5KdE,EAAQS,KAAK,YAGlB,CAACzB,EAAUgB,EAAShD,IAGnB,qCACI,uCACCzB,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACvD,eAACkO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,4BAGR,gCACKjD,EAAOpB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAMyF,MACX,6BAAKzF,EAAMP,MAAQO,EAAMP,KAAKyD,OAC9B,6BAAKlD,EAAMyJ,UAAUC,UAAU,EAAG,MAClC,mCAAM1J,EAAMwM,cACZ,6BACKxM,EAAMyM,OACFzM,EAAM0M,OAAOhD,UAAU,EAAG,IAE1B,mBAAGnG,UAAU,eAAe8B,MAAO,CAAED,MAAO,WAErD,6BACKpF,EAAM+P,YACF/P,EAAM4M,YAEN,mBAAGrJ,UAAU,eAAe8B,MAAO,CAAED,MAAO,WAErD,6BACI,cAAC,iBAAD,CAAelB,GAAE,kBAAalE,EAAMyF,KAApC,SACI,cAACjC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAnBHvD,EAAMyF,iBCsC5B+K,GA1EQ,SAAC,GAAiB,IAAflO,EAAc,EAAdA,QAChBhB,EAAWqC,cAEXhE,EAAWiE,aAAY,SAAAnG,GAAK,OAAIA,EAAMkC,YACpC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAGSmR,EADE7M,aAAY,SAAAnG,GAAK,OAAIA,EAAMoC,cACtCvB,QAERwJ,qBAAU,WACFxI,GAAYA,EAASwF,QACrBxD,E3BqJa,yCAAM,WAAOA,EAAUI,GAAjB,wBAAAC,EAAA,sEAEvBL,EAAS,CACL1D,KAAMtC,KAHa,EAMaoG,IAAfpC,EANE,EAMfD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVnB,SAcAC,KAAMC,IAAN,aAEnBL,GAhBmB,gBAcfM,EAde,EAcfA,KAKRZ,EAAS,CACL1D,KAAMrC,GACNuC,QAASoE,IArBU,kDAwBvBZ,EAAS,CACL1D,KAAMpC,GACNsC,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1B1E,0DAAN,yD2BnJbE,EAAQS,KAAK,YAGlB,CAACzB,EAAUgB,EAAShD,EAAUmR,IAGjC,IAAMC,EAAgB,SAACjP,GACfmO,OAAOe,QAAQ,kBACfrP,E3B0Ke,SAACG,GAAD,gDAAQ,WAAOH,EAAUI,GAAjB,oBAAAC,EAAA,sEAE3BL,EAAS,CACL1D,KAAMlC,KAHiB,EAMSgG,IAAfpC,EANM,EAMnBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVf,SAcrBC,KAAM4O,OAAN,qBACYnP,GACdG,GAhBuB,OAmB3BN,EAAS,CACL1D,KAAMjC,KApBiB,gDAuB3B2F,EAAS,CACL1D,KAAMhC,GACNkC,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBtE,yDAAR,wD2B1KNyO,CAAYpP,KAK7B,OACI,qCACI,uCACC5D,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACvD,eAACkO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,4BAGR,gCACK3D,EAAMV,KAAI,SAAAO,GAAI,OACX,+BACI,6BAAKA,EAAKgG,MACV,6BAAKhG,EAAKyD,OACV,6BAAI,mBAAG4M,KAAI,iBAAYrQ,EAAKyL,OAAxB,SAAkCzL,EAAKyL,UAC3C,6BACKzL,EAAKqF,QACD,mBAAGvB,UAAU,eAAe8B,MAAO,CAAED,MAAO,WAE5C,mBAAG7B,UAAU,eAAe8B,MAAO,CAAED,MAAO,WAErD,+BACI,cAAC,iBAAD,CAAelB,GAAE,qBAAgBzE,EAAKgG,IAArB,SAAjB,SACI,cAACjC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAGrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASsB,QAAS,kBAAM6L,EAAcjR,EAAKgG,MAA9E,SACI,mBAAGlC,UAAU,wBAjBhB9D,EAAKgG,iBCiD3BqL,GA5FQ,SAAC,GAAwB,IAAtBzI,EAAqB,EAArBA,MAAO/F,EAAc,EAAdA,QACvByO,EAAS1I,EAAMC,OAAO7G,GADe,EAGnBc,mBAAS,IAHU,oBAGpCW,EAHoC,KAG9BuI,EAH8B,OAIjBlJ,mBAAS,IAJQ,oBAIpC2I,EAJoC,KAI7BC,EAJ6B,OAKb5I,oBAAS,GALI,oBAKpCuC,EALoC,KAK3BkM,EAL2B,KAOrC1P,EAAWqC,cAEXnE,EAAcoE,aAAY,SAAAnG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAElBK,EAAa8D,aAAY,SAAAnG,GAAK,OAAIA,EAAMqC,cAC7BmR,EAA8DnR,EAAvEjC,QAA+BqT,EAAwCpR,EAA/C7B,MAA6BkT,EAAkBrR,EAA3BxB,QAEpDwJ,qBAAU,WACFqJ,GACA7P,EAAS,CACL1D,KAAM5B,KAEVsG,EAAQS,KAAK,mBAERtD,EAAKyD,MAAQzD,EAAKgG,MAAQsL,GAG3BtF,EAAQhM,EAAKyD,MACbiI,EAAS1L,EAAKyL,OACd8F,EAAWvR,EAAKqF,UAJhBxD,EAASE,GAAeuP,MAQjC,CAACzP,EAAU7B,EAAMsR,EAAQI,EAAe7O,IAa3C,OACI,qCACI,cAAC,QAAD,CAAM4B,GAAG,iBAAiBX,UAAU,qBAApC,qBAGA,eAAC,GAAD,WACI,2CACC0N,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASzN,QAAQ,SAAjB,SAA2ByN,IAC1CrT,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACvD,eAACyE,GAAA,EAAD,CAAMC,SArBA,SAACC,GACnBA,EAAEC,iBACFvB,E5B2LkB,SAAC7B,GAAD,gDAAU,WAAO6B,EAAUI,GAAjB,wBAAAC,EAAA,sEAE5BL,EAAS,CACL1D,KAAM/B,KAHkB,EAMQ6F,IAAfpC,EANO,EAMpBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXd,SAeLC,KAAMiK,IAAN,qBACLxM,EAAKgG,KACnBhG,EACAmC,GAlBwB,gBAepBM,EAfoB,EAepBA,KAMRZ,EAAS,CACL1D,KAAM9B,KAEVwF,EAAS,CACL1D,KAAM5C,EACN8C,QAASoE,IA1Be,kDA6B5BZ,EAAS,CACL1D,KAAM7B,GACN+B,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA/BrE,0DAAV,wD4B3LTgP,CAAW,CACf3L,IAAKsL,EACL7N,OACAgI,QACApG,cAeO,UACI,eAACpC,GAAA,EAAKmH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,mBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6I,EAAQ7I,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,4BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,QACL0F,YAAY,cACZD,MAAO6H,EACP/H,SAAU,SAACP,GAAD,OAAOuI,EAASvI,EAAEQ,OAAOC,aAI3C,cAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACpH,GAAA,EAAKoL,MAAN,CACIlQ,KAAK,WACLmQ,MAAM,WACNC,QAASlJ,EACT3B,SAAU,SAACP,GAAD,OAAOoO,EAAWpO,EAAEQ,OAAO4K,cAG7C,cAACxK,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,8BCoBT4N,GAvGW,SAAC,GAAwB,IAAtB/O,EAAqB,EAArBA,QACnBqF,EADwC,EAAZU,MACTC,OAAOX,YAAc,EACxCrG,EAAWqC,cAEXnG,EAAcoG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAElCM,EAAgBuF,aAAY,SAAAnG,GAAK,OAAIA,EAAMY,iBAChCiT,EAA8DjT,EAAvER,QAA+B0T,EAAwClT,EAA/CJ,MAA6BwS,EAAkBpS,EAA3BC,QAE9CC,EAAgBqF,aAAY,SAAAnG,GAAK,OAAIA,EAAMc,iBAChCiT,EAAuFjT,EAAhGV,QAA+B4T,EAAiElT,EAAxEN,MAA6ByT,EAA2CnT,EAApDD,QAAiCqT,EAAmBpT,EAA5BJ,QAGpEmB,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAERwI,qBAAU,WACNxG,EAAS,CAAE1D,KAAMpE,IAEZ8F,EAASwF,SACVxC,EAAQS,KAAK,UAGb2O,EACApP,EAAQS,KAAR,yBAA+B4O,EAAelM,IAA9C,UAEAnE,EAASoG,GAAa,GAAIC,MAE/B,CAACrG,EAAUgB,EAAShD,EAAUmR,EAAeiB,EAAeC,EAAgBhK,IAG/E,IAAM+I,EAAgB,SAACjP,GACfmO,OAAOe,QAAQ,kBAEfrP,EnBmBiB,SAACG,GAAD,gDAAQ,WAAOH,EAAUI,GAAjB,oBAAAC,EAAA,sEAE7BL,EAAS,CACL1D,KAAM1E,IAHmB,EAMOwI,IAAfpC,EANQ,EAMrBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVb,SAcvBC,KAAM4O,OAAN,wBAA8BnP,GAAMG,GAdb,OAgB7BN,EAAS,CAAE1D,KAAMzE,IAhBY,gDAmB7BmI,EAAS,CACL1D,KAAMxE,EACN0E,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UArBpE,yDAAR,wDmBnBRwP,CAAcnQ,KAW/B,OACI,qCACI,eAACuD,GAAA,EAAD,CAAKzB,UAAU,qBAAf,UACI,cAAC0B,GAAA,EAAD,UACI,4CAEJ,cAACA,GAAA,EAAD,CAAK1B,UAAU,aAAf,SACI,eAACC,GAAA,EAAD,CAAQD,UAAU,OAAOsB,QAZZ,WAEzBvD,EnBqCqB,yCAAM,WAAOA,EAAUI,GAAjB,wBAAAC,EAAA,sEAE3BL,EAAS,CACL1D,KAAMvE,IAHiB,EAMSqI,IAAfpC,EANM,EAMnBD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYxC,EAASyC,SAVf,SAcJC,KAAM4H,KAAN,gBAA4B,GAAIhI,GAd5B,gBAcnBM,EAdmB,EAcnBA,KAERZ,EAAS,CAAE1D,KAAMtE,EAAwBwE,QAASoE,IAhBvB,kDAmB3BZ,EAAS,CACL1D,KAAMrE,EACNuE,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UArBtE,0DAAN,0DmB3BT,UACI,mBAAGmB,UAAU,gBADjB,0BAKP+N,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAS9N,QAAQ,SAAjB,SAA2B8N,IAC1CC,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAShO,QAAQ,SAAjB,SAA2BgO,IAC1C5T,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IACvD,qCACI,eAACkO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChJ,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,0CACA,uCACA,4BAGR,gCACK7F,EAASwB,KAAI,SAAAf,GAAO,OACjB,+BACI,6BAAKA,EAAQsH,MACb,6BAAKtH,EAAQ+E,OACb,mCAAM/E,EAAQiI,SACd,6BAAKjI,EAAQ0T,WACb,6BAAK1T,EAAQ2T,QACb,+BACI,cAAC,iBAAD,CAAe5N,GAAE,yBAAoB/F,EAAQsH,IAA5B,SAAjB,SACI,cAACjC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAGrB,cAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASsB,QAAS,kBAAM6L,EAAcvS,EAAQsH,MAAjF,SACI,mBAAGlC,UAAU,wBAbhBpF,EAAQsH,aAoB7B,cAAC,GAAD,CAAU1H,MAAOA,EAAOC,KAAMA,EAAM8G,SAAS,WC0FlDiN,GAzLW,SAAC,GAAwB,IAAtB1J,EAAqB,EAArBA,MAAO/F,EAAc,EAAdA,QAC1BqH,EAAYtB,EAAMC,OAAO7G,GADe,EAGtBc,mBAAS,IAHa,oBAGvCW,EAHuC,KAGjCuI,EAHiC,OAIpBlJ,mBAAS,GAJW,oBAIvC6D,EAJuC,KAIhC4L,EAJgC,OAKpBzP,mBAAS,IALW,oBAKvCqD,EALuC,KAKhCqM,EALgC,OAMpB1P,mBAAS,IANW,oBAMvCuP,EANuC,KAMhCI,EANgC,OAOd3P,mBAAS,IAPK,oBAOvCsP,EAPuC,KAO7BM,EAP6B,OAQN5P,mBAAS,GARH,oBAQvC8G,EARuC,KAQzB+I,EARyB,OASR7P,mBAAS,IATD,oBASvC+E,EATuC,KAS1B+K,EAT0B,OAUZ9P,oBAAS,GAVG,oBAUvC+P,EAVuC,KAU5BC,EAV4B,KAYxCjR,EAAWqC,cAEXzF,EAAiB0F,aAAY,SAACnG,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,EAAgBoF,aAAY,SAACnG,GAAD,OAAWA,EAAMe,iBAEtCyS,EAGTzS,EAHAX,QACOqT,EAEP1S,EAFAP,MACSkT,EACT3S,EADAF,QAGJwJ,qBAAU,WACFqJ,GACA7P,EAAS,CAAE1D,KAAMhE,IACjB0H,EAAS,CAAE1D,KAAM3E,IACjBqJ,EAAQS,KAAK,sBAER5E,EAAQ+E,MAAQ/E,EAAQsH,MAAQkE,GAGjC8B,EAAQtN,EAAQ+E,MAChB8O,EAAS7T,EAAQiI,OACjB6L,EAAS9T,EAAQyH,OACjBsM,EAAS/T,EAAQ2T,OACjBK,EAAYhU,EAAQ0T,UACpBO,EAAgBjU,EAAQkL,cACxBgJ,EAAelU,EAAQmJ,cARvBhG,EAASsG,GAAoB+B,MAWtC,CAACrI,EAAUgB,EAASqH,EAAWxL,EAASgT,IAE3C,IAAMqB,EAAiB,yCAAG,WAAO5P,GAAP,wBAAAjB,EAAA,6DAChB8Q,EAAO7P,EAAEQ,OAAOsP,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJS,SAOZ3Q,EAAS,CACXC,QAAS,CACL,eAAgB,wBATN,SAaKG,KAAM4H,KAAK,cAAe+I,EAAU/Q,GAbzC,gBAaVM,EAbU,EAaVA,KAER+P,EAAS/P,GACTqQ,GAAa,GAhBK,kDAkBlBpC,QAAQlS,MAAR,MACAsU,GAAa,GAnBK,0DAAH,sDAuCvB,OACI,qCACI,cAAC,QAAD,CAAMrO,GAAG,oBAAoBX,UAAU,qBAAvC,qBAGA,eAAC,GAAD,WACI,8CACC0N,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASzN,QAAQ,SAAjB,SAA2ByN,IAC1CrT,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAASwF,QAAQ,SAAjB,SAA2BxF,IAEnB,eAACyE,GAAA,EAAD,CAAMC,SA9BR,SAACC,GACnBA,EAAEC,iBACFvB,EpBmCqB,SAACnD,GAAD,gDAAa,WAAOmD,EAAUI,GAAjB,wBAAAC,EAAA,sEAElCL,EAAS,CACL1D,KAAMnE,IAHwB,EAMEiI,IAAfpC,EANa,EAM1BD,UAAaC,SAEfsC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYxC,EAASyC,SAXR,SAeXC,KAAMiK,IAAN,wBAA2B9N,EAAQsH,KAAOtH,EAASyD,GAfxC,gBAe1BM,EAf0B,EAe1BA,KAERZ,EAAS,CAAE1D,KAAMlE,EAAwBoE,QAASoE,IAjBhB,kDAoBlCZ,EAAS,CACL1D,KAAMjE,EACNmE,QAAS,KAAMqE,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtB/D,0DAAb,wDoBlCjB0Q,CAAc,CACVrN,IAAKkE,EACLzG,OACAkD,QACAR,QACAkM,QACAD,WACAvK,cACA+B,mBAmBY,UACI,eAAC3G,GAAA,EAAKmH,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,mBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6I,EAAQ7I,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,oBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,SACL0F,YAAY,cACZD,MAAO+C,EACPjD,SAAU,SAACP,GAAD,OAAOoP,EAASpP,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,oBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,kBACZD,MAAOuC,EACPzC,SAAU,SAACP,GAAD,OAAOqP,EAASrP,EAAEQ,OAAOC,UAEvC,cAACX,GAAA,EAAKqQ,KAAN,CACItR,GAAG,aACHsM,MAAM,cACNiF,QAAM,EACN7P,SAAUqP,IAEbF,GAAa,cAAC,GAAD,OAGlB,eAAC5P,GAAA,EAAKmH,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,oBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,cACZD,MAAOyO,EACP3O,SAAU,SAACP,GAAD,OAAOsP,EAAStP,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,6BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,SACL0F,YAAY,qBACZD,MAAOgG,EACPlG,SAAU,SAACP,GAAD,OAAOwP,EAAgBxP,EAAEQ,OAAOC,aAIlD,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,uBACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,iBACZD,MAAOwO,EACP1O,SAAU,SAACP,GAAD,OAAOuP,EAAYvP,EAAEQ,OAAOC,aAI9C,eAACX,GAAA,EAAKmH,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACpH,GAAA,EAAKqH,MAAN,0BACA,cAACrH,GAAA,EAAKO,QAAN,CACIrF,KAAK,OACL0F,YAAY,oBACZD,MAAOiE,EACPnE,SAAU,SAACP,GAAD,OAAOyP,EAAezP,EAAEQ,OAAOC,aAIjD,cAACG,GAAA,EAAD,CAAQ5F,KAAK,SAAS6F,QAAQ,UAA9B,8BCrIjBwP,GAhCH,WACV,OACE,eAAC,iBAAD,WACE,cAAC,GAAD,IACA,sBAAM1P,UAAU,OAAhB,SACE,eAACU,GAAA,EAAD,WACE,cAAC,KAAD,CAAOiP,KAAK,mBAAmBC,UAAW/K,KAC1C,cAAC,KAAD,CAAO8K,KAAK,eAAeC,UAAWxK,KACtC,cAAC,KAAD,CAAOuK,KAAK,SAASC,UAAWlI,KAChC,cAAC,KAAD,CAAOiI,KAAK,aAAaC,UAAW/I,KACpC,cAAC,KAAD,CAAO8I,KAAK,YAAYC,UAAW3H,KACnC,cAAC,KAAD,CAAO0H,KAAK,WAAWC,UAAWrH,KAClC,cAAC,KAAD,CAAOoH,KAAK,YAAYC,UAAWjG,KACnC,cAAC,KAAD,CAAOgG,KAAK,WAAWC,UAAWvF,KAClC,cAAC,KAAD,CAAOsF,KAAK,cAAcC,UAAWlF,KACrC,cAAC,KAAD,CAAOiF,KAAK,cAAcC,UAAWxE,KACrC,cAAC,KAAD,CAAOuE,KAAK,kBAAkBC,UAAW5C,KACzC,cAAC,KAAD,CAAO2C,KAAK,iBAAiBC,UAAW3C,KACxC,cAAC,KAAD,CAAO0C,KAAK,sBAAsBC,UAAWrC,KAC7C,cAAC,KAAD,CAAOoC,KAAK,oBAAoBC,UAAW9B,GAAmB+B,OAAK,IACnE,cAAC,KAAD,CAAOF,KAAK,gCAAgCC,UAAW9B,GAAmB+B,OAAK,IAC/E,cAAC,KAAD,CAAOF,KAAK,0BAA0BC,UAAWpB,KACjD,cAAC,KAAD,CAAOmB,KAAK,oBAAoBC,UAAW/K,GAAYgL,OAAK,IAC5D,cAAC,KAAD,CAAOF,KAAK,oCAAoCC,UAAW/K,GAAYgL,OAAK,IAC5E,cAAC,KAAD,CAAOF,KAAK,IAAIC,UAAW/K,GAAYgL,OAAK,SAGhD,cAAC,GAAD,QCpCSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASvP,OACP,cAAC,IAAD,CAAUtD,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFqO,SAASyE,eAAe,SAG1BV,M","file":"static/js/main.f4c19421.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS ='CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD ='CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducers,\r\n    orderDetailsReducers,\r\n    orderPayReducers,\r\n    orderDeliverReducers,\r\n    orderListMyReducers,\r\n    orderListReducers\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducers,\r\n    orderDetails: orderDetailsReducers,\r\n    orderPay: orderPayReducers,\r\n    orderDeliver: orderDeliverReducers,\r\n    orderListMy: orderListMyReducers,\r\n    orderList: orderListReducers\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddresFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddresFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_RESET,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_DETAILS_RESET:\r\n            return { product: { reviews: [] } }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false, error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducers = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false, error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false, error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ORDER_DELIVER_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_DELIVER_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n        }\r\n      case ORDER_DELIVER_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_DELIVER_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const orderListMyReducers = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false, error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducers = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false, error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from 'axios'\r\nimport {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>DnD Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                                </LinkContainer>}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/adminuserlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/adminproductlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/adminorderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; DnDShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 py-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} className='h-100' fluid />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n            <span className='sr-only'></span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/adminproductlist/${x + 1}`}>\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}/>\r\n            <meta name='keywords' content={keywords}/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to DnD Shop | Home',\r\n    description: 'Your one stop shop for all your campaign needs',\r\n    keywords: 'Fight me IRL normies'\r\n\r\n}\r\nexport default Meta\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                        <>\r\n                            <Row>\r\n                                {products.map(product => (\r\n                                    <Col className='align-items-stretch d-flex' key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                        <Product product={product} />\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                        </>\r\n                    )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductsDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductsDetails(match.params.id))\r\n        if (successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({\r\n                type: PRODUCT_CREATE_REVIEW_RESET\r\n            })\r\n        }\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6} className='align-items-stretch d-flex'>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (<ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Quantity</Col>\r\n                                            <Col>\r\n                                                <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>)}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block'\r\n                                            type='button'\r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>\r\n                                            {review.name}\r\n                                            <Rating value={review.rating} />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </strong>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) => setRating(e.target.value)}>\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type='submit' variant='primary'>Submit</Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                            <Message>Please <Link to='/login'>sign in</Link> to write a review\r\n                                                {' '}\r\n                                            </Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // Dispatch register\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // Dispatch update profile\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delievered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDelievered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DELIVER_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/orders/${order._id}/deliver`,\r\n        {},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: ORDER_DELIVER_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_DELIVER_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='Paypal' checked onChange={(e) => setPaymentMethod(e.target.value)}>\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n\r\n    // Calculate Prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n        (acc, item) => acc + item.price * item.qty,\r\n        0\r\n    ))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/orders/${order._id}`)\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items: </h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Shipping\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Tax\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Total\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ?\r\n                                        (order.paidAt.substring(0, 10))\r\n                                        :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ?\r\n                                        (order.deliveredAt)\r\n                                        :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/orders/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUsers } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUsers(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ?\r\n                                        (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                        :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/adminuser/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({\r\n                type: USER_UPDATE_RESET\r\n            })\r\n            history.push('/adminuserlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n             _id: userId, \r\n             name, \r\n             email, \r\n             isAdmin }))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to='/adminuserlist' className='btn btn-light my=3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/adminproducts/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            // Delete Products \r\n            dispatch(deleteProduct(id))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        // Create Product\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Category</th>\r\n                                <th>Brand</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/adminproducts/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { updateProduct, listProductsDetails } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET, PRODUCT_DETAILS_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            dispatch({ type: PRODUCT_DETAILS_RESET })\r\n            history.push('/adminproductlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/adminproductlist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter price'\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter image url'\r\n                                        value={image}\r\n                                        onChange={(e) => setImage(e.target.value)}\r\n                                    ></Form.Control>\r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label='Choose File'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}\r\n                                    ></Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter brand'\r\n                                        value={brand}\r\n                                        onChange={(e) => setBrand(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>Count In Stock</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter countInStock'\r\n                                        value={countInStock}\r\n                                        onChange={(e) => setCountInStock(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter category'\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter description'\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n                                </Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/search/:keyword' component={HomeScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/orders/:id' component={OrderScreen} />\n          <Route path='/adminorderlist' component={OrderListScreen} />\n          <Route path='/adminuserlist' component={UserListScreen} />\n          <Route path='/adminuser/:id/edit' component={UserEditScreen} />\n          <Route path='/adminproductlist' component={ProductListScreen} exact/>\n          <Route path='/adminproductlist/:pageNumber' component={ProductListScreen} exact/>\n          <Route path='/adminproducts/:id/edit' component={ProductEditScreen} />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}